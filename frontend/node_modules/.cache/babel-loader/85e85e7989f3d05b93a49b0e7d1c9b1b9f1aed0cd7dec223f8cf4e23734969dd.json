{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_card, {\n    class: \"card\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Username: \"), _createVNode(_component_el_input, {\n      type: \"text\",\n      modelValue: $data.loginInfo.userID,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.loginInfo.userID = $event),\n      placeholder: \"Input username\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _hoisted_1, _hoisted_2, _createTextVNode(\" Password: \"), _createVNode(_component_el_input, {\n      type: \"text\",\n      modelValue: $data.loginInfo.password,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.loginInfo.password = $event),\n      placeholder: \"Input pwd\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _hoisted_3, _hoisted_4, _createVNode(_component_el_button, {\n      type: \"default\",\n      onClick: $options.register\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Register\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _hoisted_5, _hoisted_6]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"p\", null, _toDisplayString(this.store.state.registrationId), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_createVNode","_component_el_card","class","_component_el_input","type","$data","loginInfo","userID","$event","placeholder","_hoisted_1","_hoisted_2","password","_hoisted_3","_hoisted_4","_component_el_button","onClick","$options","register","_hoisted_5","_hoisted_6","_toDisplayString","store","state","registrationId"],"sources":["C:\\Users\\25707\\Desktop\\112\\工作准备\\软件方向\\E2EE\\E2EE\\src\\components\\Register.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card class=\"card\">\r\n    Username: <el-input type=\"text\" v-model=\"loginInfo.userID\" placeholder=\"Input username\"/>\r\n    <br><br>\r\n    Password: <el-input type=\"text\" v-model=\"loginInfo.password\" placeholder=\"Input pwd\"/>\r\n    <br><br>\r\n    <el-button type=\"default\" v-on:click=\"register\">Register</el-button>\r\n    <br><br>\r\n    </el-card>\r\n    <p>{{ this.store.state.registrationId }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {useRouter} from \"vue-router\";\r\nimport router from \"@/router\";\r\nimport {useStore} from \"vuex\";\r\n\r\nexport default {\r\n  setup() {\r\n    const store = useStore()  // 该方法用于返回store 实例\r\n    console.log(store)  // store 实例对象\r\n    const router = useRouter();\r\n    return {store};\r\n  },\r\n  name: \"Register\",\r\n  data() {\r\n    return {\r\n      loginInfo: {\r\n        userID: '',\r\n        password: '',\r\n        registrationID: '',\r\n      },\r\n      responseResult: [],\r\n    }\r\n  },\r\n  methods: {\r\n    register() {\r\n      this.$http.post('/register', {\r\n        username: this.loginInfo.userID\r\n      }).then(successResponse => {\r\n        if (successResponse.data.code === 200) {\r\n          this.store.dispatch('registration', this.loginInfo.userID).then(\r\n              res => {\r\n                console.log(`res: ${res}`);\r\n                this.store.dispatch('store-info');\r\n                this.$http.post('/register1', {\r\n                  username: this.loginInfo.userID,\r\n                  password: this.loginInfo.password,\r\n                  registrationID: res.registrationId,\r\n                }).then(successResponse => {\r\n                  if (successResponse.data.code === 200) {\r\n                    this.store.dispatch('send-keys-to-server')\r\n                        .then(res => {\r\n                          if (res === 'ok') {\r\n                            alert('registered successfully!')\r\n                            router.replace('/login');\r\n                          }\r\n                        })\r\n                  } else {\r\n                    alert(\"strange error\")\r\n                  }\r\n                })\r\n              }\r\n          )\r\n        } else if (successResponse.data.code === 406) {\r\n          alert('Invalid user name!')\r\n        } else {\r\n          alert('User already exists!')\r\n        }\r\n      })\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n.card {\r\n  width: 50%;\r\n  margin: 0 auto;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n}\r\n</style>\r\n"],"mappings":";gCAIIA,mBAAA,CAAI;gCAAAA,mBAAA,CAAI;gCAERA,mBAAA,CAAI;gCAAAA,mBAAA,CAAI;gCAERA,mBAAA,CAAI;gCAAAA,mBAAA,CAAI;;;;;;uBAPVC,mBAAA,CAUM,cATJC,YAAA,CAOUC,kBAAA;IAPDC,KAAK,EAAC;EAAM;sBAAC,MACZ,C,iBADY,aACZ,GAAAF,YAAA,CAA+EG,mBAAA;MAArEC,IAAI,EAAC,MAAM;kBAAUC,KAAA,CAAAC,SAAS,CAACC,MAAM;iEAAhBF,KAAA,CAAAC,SAAS,CAACC,MAAM,GAAAC,MAAA;MAAEC,WAAW,EAAC;6CACvEC,UAAI,EAAAC,UAAI,E,iBAAA,aACE,GAAAX,YAAA,CAA4EG,mBAAA;MAAlEC,IAAI,EAAC,MAAM;kBAAUC,KAAA,CAAAC,SAAS,CAACM,QAAQ;iEAAlBP,KAAA,CAAAC,SAAS,CAACM,QAAQ,GAAAJ,MAAA;MAAEC,WAAW,EAAC;6CACzEI,UAAI,EAAAC,UAAI,EACRd,YAAA,CAAoEe,oBAAA;MAAzDX,IAAI,EAAC,SAAS;MAAMY,OAAK,EAAEC,QAAA,CAAAC;;wBAAU,MAAQ,C,iBAAR,UAAQ,E;;oCACxDC,UAAI,EAAAC,UAAI,C;;MAERtB,mBAAA,CAA4C,WAAAuB,gBAAA,MAAjCC,KAAK,CAACC,KAAK,CAACC,cAAc,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}