{"ast":null,"code":"import { useRouter } from \"vue-router\";\nimport router from \"@/router\";\nimport { useStore } from \"vuex\";\nexport default {\n  setup() {\n    const store = useStore(); // 该方法用于返回store 实例\n    console.log(store); // store 实例对象\n    const router = useRouter();\n    return {\n      store\n    };\n  },\n  name: \"Register\",\n  data() {\n    return {\n      loginInfo: {\n        userID: '',\n        password: '',\n        registrationID: ''\n      },\n      responseResult: []\n    };\n  },\n  methods: {\n    register() {\n      this.$http.post('/register', {\n        username: this.loginInfo.userID\n      }).then(successResponse => {\n        if (successResponse.data.code === 200) {\n          this.store.dispatch('registration', this.loginInfo.userID).then(res => {\n            console.log(`res: ${res}`);\n            this.store.dispatch('store-info');\n            this.$http.post('/register1', {\n              username: this.loginInfo.userID,\n              password: this.loginInfo.password,\n              registrationID: res.registrationId\n            }).then(successResponse => {\n              if (successResponse.data.code === 200) {\n                this.store.dispatch('send-keys-to-server').then(res => {\n                  if (res === 'ok') {\n                    alert('registered successfully!');\n                    router.replace('/login');\n                  }\n                });\n              } else {\n                alert(\"strange error\");\n              }\n            });\n          });\n        } else if (successResponse.data.code === 406) {\n          alert('Invalid user name!');\n        } else {\n          alert('User already exists!');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["useRouter","router","useStore","setup","store","console","log","name","data","loginInfo","userID","password","registrationID","responseResult","methods","register","$http","post","username","then","successResponse","code","dispatch","res","registrationId","alert","replace"],"sources":["C:\\Users\\25707\\Desktop\\112\\工作准备\\软件方向\\E2EE\\E2EE\\src\\components\\Register.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card class=\"card\">\r\n    Username: <el-input type=\"text\" v-model=\"loginInfo.userID\" placeholder=\"Input username\"/>\r\n    <br><br>\r\n    Password: <el-input type=\"text\" v-model=\"loginInfo.password\" placeholder=\"Input pwd\"/>\r\n    <br><br>\r\n    <el-button type=\"default\" v-on:click=\"register\">Register</el-button>\r\n    <br><br>\r\n    </el-card>\r\n    <p>{{ this.store.state.registrationId }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {useRouter} from \"vue-router\";\r\nimport router from \"@/router\";\r\nimport {useStore} from \"vuex\";\r\n\r\nexport default {\r\n  setup() {\r\n    const store = useStore()  // 该方法用于返回store 实例\r\n    console.log(store)  // store 实例对象\r\n    const router = useRouter();\r\n    return {store};\r\n  },\r\n  name: \"Register\",\r\n  data() {\r\n    return {\r\n      loginInfo: {\r\n        userID: '',\r\n        password: '',\r\n        registrationID: '',\r\n      },\r\n      responseResult: [],\r\n    }\r\n  },\r\n  methods: {\r\n    register() {\r\n      this.$http.post('/register', {\r\n        username: this.loginInfo.userID\r\n      }).then(successResponse => {\r\n        if (successResponse.data.code === 200) {\r\n          this.store.dispatch('registration', this.loginInfo.userID).then(\r\n              res => {\r\n                console.log(`res: ${res}`);\r\n                this.store.dispatch('store-info');\r\n                this.$http.post('/register1', {\r\n                  username: this.loginInfo.userID,\r\n                  password: this.loginInfo.password,\r\n                  registrationID: res.registrationId,\r\n                }).then(successResponse => {\r\n                  if (successResponse.data.code === 200) {\r\n                    this.store.dispatch('send-keys-to-server')\r\n                        .then(res => {\r\n                          if (res === 'ok') {\r\n                            alert('registered successfully!')\r\n                            router.replace('/login');\r\n                          }\r\n                        })\r\n                  } else {\r\n                    alert(\"strange error\")\r\n                  }\r\n                })\r\n              }\r\n          )\r\n        } else if (successResponse.data.code === 406) {\r\n          alert('Invalid user name!')\r\n        } else {\r\n          alert('User already exists!')\r\n        }\r\n      })\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n.card {\r\n  width: 50%;\r\n  margin: 0 auto;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n}\r\n</style>\r\n"],"mappings":"AAeA,SAAQA,SAAS,QAAO,YAAY;AACpC,OAAOC,MAAK,MAAO,UAAU;AAC7B,SAAQC,QAAQ,QAAO,MAAM;AAE7B,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIF,QAAQ,EAAC,EAAG;IAC1BG,OAAO,CAACC,GAAG,CAACF,KAAK,GAAG;IACpB,MAAMH,MAAK,GAAID,SAAS,EAAE;IAC1B,OAAO;MAACI;IAAK,CAAC;EAChB,CAAC;EACDG,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZC,cAAc,EAAE;MAClB,CAAC;MACDC,cAAc,EAAE;IAClB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,WAAW,EAAE;QAC3BC,QAAQ,EAAE,IAAI,CAACT,SAAS,CAACC;MAC3B,CAAC,CAAC,CAACS,IAAI,CAACC,eAAc,IAAK;QACzB,IAAIA,eAAe,CAACZ,IAAI,CAACa,IAAG,KAAM,GAAG,EAAE;UACrC,IAAI,CAACjB,KAAK,CAACkB,QAAQ,CAAC,cAAc,EAAE,IAAI,CAACb,SAAS,CAACC,MAAM,CAAC,CAACS,IAAI,CAC3DI,GAAE,IAAK;YACLlB,OAAO,CAACC,GAAG,CAAE,QAAOiB,GAAI,EAAC,CAAC;YAC1B,IAAI,CAACnB,KAAK,CAACkB,QAAQ,CAAC,YAAY,CAAC;YACjC,IAAI,CAACN,KAAK,CAACC,IAAI,CAAC,YAAY,EAAE;cAC5BC,QAAQ,EAAE,IAAI,CAACT,SAAS,CAACC,MAAM;cAC/BC,QAAQ,EAAE,IAAI,CAACF,SAAS,CAACE,QAAQ;cACjCC,cAAc,EAAEW,GAAG,CAACC;YACtB,CAAC,CAAC,CAACL,IAAI,CAACC,eAAc,IAAK;cACzB,IAAIA,eAAe,CAACZ,IAAI,CAACa,IAAG,KAAM,GAAG,EAAE;gBACrC,IAAI,CAACjB,KAAK,CAACkB,QAAQ,CAAC,qBAAqB,EACpCH,IAAI,CAACI,GAAE,IAAK;kBACX,IAAIA,GAAE,KAAM,IAAI,EAAE;oBAChBE,KAAK,CAAC,0BAA0B;oBAChCxB,MAAM,CAACyB,OAAO,CAAC,QAAQ,CAAC;kBAC1B;gBACF,CAAC;cACP,OAAO;gBACLD,KAAK,CAAC,eAAe;cACvB;YACF,CAAC;UACH,EACJ;QACF,OAAO,IAAIL,eAAe,CAACZ,IAAI,CAACa,IAAG,KAAM,GAAG,EAAE;UAC5CI,KAAK,CAAC,oBAAoB;QAC5B,OAAO;UACLA,KAAK,CAAC,sBAAsB;QAC9B;MACF,CAAC;IACH;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}