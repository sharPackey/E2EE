{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-f087aab4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"message-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"right\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"left\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_card, {\n    class: \"carrd\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.msgList, msg => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: msg.id,\n        class: \"gg\"\n      }, [msg.includes('####') ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString(msg.split('::')[1]), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString(msg.split('::')[1]), 1 /* TEXT */))]);\n    }), 128 /* KEYED_FRAGMENT */))]), _withDirectives(_createElementVNode(\"textarea\", {\n      class: \"inputs\",\n      type: \"text\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.message.groupId = $event),\n      placeholder: \"groupID\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.message.groupId]]), _withDirectives(_createElementVNode(\"textarea\", {\n      class: \"inputs\",\n      type: \"text\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.message.myMsg = $event),\n      placeholder: \"myMsg\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.message.myMsg]]), _createVNode(_component_el_button, {\n      type: \"primary\",\n      class: \"boxinput\",\n      onClick: $options.send\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Send\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _createElementVNode(\"div\", null, [_createVNode(_component_el_button, {\n      type: \"default\",\n      onClick: $options.sendmessage\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Create GroupChat\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]), _createVNode(_component_el_dialog, {\n      modelValue: $data.getMessage,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.getMessage = $event)\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form, {\n        model: _ctx.ruleForm,\n        ref: \"ruleForm\",\n        \"label-width\": \"100px\",\n        class: \"demo-ruleForm\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $data.groupID,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.groupID = $event),\n            placeholder: \"群ID\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"收件人：\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($data.memberList.toString().replace(\"[\", '').replace(']', '')), 1 /* TEXT */)]),\n\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $data.memberOne,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.memberOne = $event),\n            placeholder: \"用户ID:\",\n            style: {\n              \"margin-top\": \"10px\"\n            }\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: $options.addOne,\n            style: {\n              \"float\": \"right\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"添加\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: $options.cGroup,\n            style: {\n              \"float\": \"right\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"创建\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createVNode","_component_el_card","_createElementVNode","_hoisted_1","_Fragment","_renderList","$data","msgList","msg","key","id","includes","_hoisted_2","_toDisplayString","split","_hoisted_3","type","message","groupId","$event","placeholder","myMsg","_component_el_button","onClick","$options","send","sendmessage","_component_el_dialog","getMessage","_component_el_form","model","_ctx","ruleForm","ref","_component_el_form_item","_component_el_input","groupID","label","memberList","toString","replace","memberOne","style","addOne","cGroup"],"sources":["C:\\Users\\25707\\Desktop\\112\\工作准备\\软件方向\\E2EE\\E2EE\\src\\components\\GroupChatPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card class=\"carrd\">\r\n      <div class=\"message-container\">\r\n        <div v-for=\"msg in msgList\" :key=\"msg.id\" class=\"gg\">\r\n          <div v-if=\"msg.includes('####')\" class=\"right\">\r\n            {{ msg.split('::')[1] }}\r\n          </div>\r\n          <div v-else class=\"left\">\r\n            {{ msg.split('::')[1] }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <textarea class=\"inputs\" type=\"text\" v-model=\"message.groupId\" placeholder=\"groupID\"/>\r\n      <textarea class=\"inputs\" type=\"text\" v-model=\"message.myMsg\" placeholder=\"myMsg\"/>\r\n      <el-button type=\"primary\" class=\"boxinput\" v-on:click=\"send\">Send</el-button>\r\n      <div>\r\n        <el-button type=\"default\" @click=\"sendmessage\">Create GroupChat</el-button>\r\n      </div>\r\n      <el-dialog v-model=\"getMessage\">\r\n        <el-form :model=\"ruleForm\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n          <el-form-item>\r\n            <el-input v-model=\"groupID\" placeholder=\"群ID\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"收件人：\">{{ memberList.toString().replace(\"[\", '').replace(']', '') }}\r\n          </el-form-item>\r\n          <el-form-item label=\"\">\r\n            <el-input v-model=\"memberOne\" placeholder=\"用户ID:\" style=\"margin-top: 10px;\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"addOne\" style=\"float:right\">添加</el-button>\r\n            <el-button type=\"primary\" @click=\"cGroup\" style=\"float:right\">创建</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {useStore} from 'vuex'\r\n\r\nexport default {\r\n  setup() {\r\n    const store = useStore()  // 该方法用于返回store 实例\r\n    console.log(store)  // store 实例对象\r\n    return {store}\r\n  },\r\n  name: \"ChatPage\",\r\n  created() {\r\n    console.log('created')\r\n    this.initWebSocket()\r\n  },\r\n  data() {\r\n    return {\r\n      getMessage: false,\r\n      message: {\r\n        groupId: -1,\r\n        destinationUserId: '',\r\n        destinationRegistrationId: '',\r\n        myMsg: '',\r\n        time: '',\r\n      },\r\n      websocket: null,\r\n      recvMsg: {},\r\n      msgList: [],\r\n      memberList: [],\r\n      memberOne: '',\r\n      groupID: '',\r\n      msg: ''\r\n    }\r\n  },\r\n  methods: {\r\n    addOne() {\r\n      this.memberList.push(this.memberOne);\r\n      this.memberOne = '';\r\n    },\r\n    cGroup() {\r\n      this.memberList.push(this.groupID)\r\n      this.$http.post('/createGroup', {\r\n        // groupId: this.groupID,//群聊ID，就用这个来识别群聊，应该吧，或者还要生成RID啥的\r\n        groupMember: this.memberList,//字面意思，list里是昵称\r\n        // userId: this.message.destinationUserId//记录创群人是谁，可有可无\r\n      }).then(async e => {\r\n        console.log(e.data);\r\n      })\r\n      this.groupID = '';\r\n      this.memberList = [];\r\n    },\r\n    sendmessage() {\r\n      this.getMessage = true;\r\n    },\r\n    send() {\r\n      console.log('send')\r\n      if (this.message.groupId !== -1) {\r\n        this.$http.post('/groupOrIndividual', {\r\n          groupId: this.message.groupId,\r\n          // userId: this.message.destinationUserId\r\n        }).then(async e => {\r\n          this.message.time = Date.now();\r\n          console.log(this.message.time);\r\n          this.msgList.push(\"####::\" + this.message.myMsg);\r\n          for (const key in e.data) {\r\n            alert(key)\r\n            let getBundleResult = await this.store.dispatch('get-key-bundle-of', key);\r\n            if (getBundleResult) {\r\n\r\n              this.message.destinationUserId = key;\r\n              this.message.destinationRegistrationId = e.data[key];\r\n              let cipherText = await this.store.dispatch('encrypt-message', this.message);\r\n              alert(1)\r\n              await this.websocketSend(JSON.stringify(cipherText));\r\n            }\r\n            alert('ok')\r\n          }\r\n          this.message.myMsg='';\r\n        })\r\n      } else {\r\n        console.log(this.message.myMsg);\r\n        this.$http.post('/groupOrIndividual', {\r\n          groupId: -1,\r\n          userId: this.message.destinationUserId\r\n        }).then(async e => {\r\n          // alert(key+' '+e.data[key])\r\n          for (const key in e.data) {\r\n            console.log(this.message.destinationUserId);\r\n            console.log(this.message.myMsg);\r\n            // alert(key+' '+e.data[key])\r\n            let getBundleResult = await this.store.dispatch('get-key-bundle-of', key);\r\n            if (getBundleResult) {\r\n              this.message.destinationUserId = key;\r\n              this.message.destinationRegistrationId = e.data[key];\r\n              this.message.groupId = -1;\r\n              this.message.time = Date.now();\r\n              console.log(this.message.time);\r\n              this.msgList.push(\"####::\" + this.message.myMsg);\r\n              let cipherText = await this.store.dispatch('encrypt-message', this.message);\r\n              this.message.myMsg = '';\r\n              await this.websocketSend(JSON.stringify(cipherText));\r\n            }\r\n          }\r\n        })\r\n      }\r\n    },\r\n    get() {\r\n      this.$http.get('/keyOf/' + this.message.destinationUserId)\r\n          .then(response => {\r\n            console.log((response));\r\n            this.recvMsg = response.data;\r\n            this.store.dispatch('process-key', response.data)\r\n                .then(res => {\r\n                  if (res === true) {\r\n                    console.log(\"ok\");\r\n                    return 'ok';\r\n                  }\r\n                });\r\n          })\r\n\r\n    },\r\n    // onConfirm() {\r\n    //   //需要传输的数据\r\n    //   let data = {\r\n    //     code: 1,\r\n    //     item: '传输数据'\r\n    //   }\r\n    //   this.websocketSend(JSON.stringify(data))\r\n    // },\r\n    initWebSocket() { // 初始化websocket\r\n      let url = 'ws://localhost:9090/websocket/' + this.store.getters.getUserId;\r\n      // alert(url)\r\n      this.websock = new WebSocket(url);\r\n      this.websock.onmessage = this.websocketOnMessage\r\n      this.websock.onerror = this.websocketOnError\r\n      this.websock.onclose = this.websocketClose\r\n    },\r\n    // websocketOnOpen() { // 连接建立之后执行send方法发送数据\r\n    //   let data = {\r\n    //     code: 0,\r\n    //     msg: {\r\n    //       userId: this.store.getters.getUserId,\r\n    //       registrationId: this.store.getters.getRegistrationId,\r\n    //     }\r\n    //   }\r\n    //   // alert('post' + JSON.stringify(data))\r\n    //   // this.websocketSend(JSON.stringify(data))\r\n    // },\r\n    websocketOnError() {\r\n      console.log('WebSocket连接失败')\r\n    },\r\n    websocketOnMessage(e) { // 数据接收\r\n      // alert('receive' + JSON.parse(e.data))\r\n      // console.log(e);\r\n      // console.log('数据接收' + e.data)\r\n      let newMsg = JSON.parse(e.data);\r\n      // alert(newMsg)\r\n      console.log(newMsg);\r\n      console.log(\"prepare to decrypt\")\r\n      // this.store.dispatch('check-info')\r\n      this.store.dispatch('decrypt-message', newMsg)\r\n          .then(res => {\r\n            console.log(res);\r\n            this.msg = res;\r\n            this.msgList.push(\"###::\" + res);\r\n          });\r\n      // console.log(decrypted);\r\n      // alert('你有新消息'+ decrypted);\r\n    },\r\n    websocketSend(Data) { // 数据发送\r\n      this.websock.send(Data)\r\n      // alert('send' + Data)\r\n\r\n    },\r\n    websocketClose(e) {  // 关闭\r\n      console.log('已关闭连接', e)\r\n    },\r\n    onStore() {\r\n      this.store.dispatch('store-info')\r\n          .then(resCode => {\r\n            console.log(resCode);\r\n          });\r\n    },\r\n    onCheck() {\r\n      this.store.dispatch('check-info', this.message.destinationUserId)\r\n          .then(resObj => {\r\n            console.log(resObj);\r\n          });\r\n    },\r\n    onDelete() {\r\n      this.store.dispatch('delete-info', this.message.destinationUserId)\r\n          .then(res => {\r\n            console.log(res);\r\n          })\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.left {\r\n  width: 100%;\r\n  float: left;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  max-width: 90%;\r\n  padding: 20px;\r\n  border-radius: 20px 20px 20px 5px;\r\n  background-color: rgb(56, 60, 75);\r\n  color: #fff;\r\n}\r\n\r\n.right {\r\n  width: auto;\r\n  float: right;\r\n  margin-bottom: 20px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  align-items: flex-end;\r\n  max-width: 90%;\r\n  padding: 20px;\r\n  border-radius: 20px 20px 5px 20px;\r\n  background-color: rgb(29, 144, 245);\r\n  color: #fff;\r\n  word-wrap: break-word;\r\n}\r\n\r\n.boxinput {\r\n  width: 50px;\r\n  height: 50px;\r\n  float: bottom;\r\n  background-color: rgb(66, 70, 86);\r\n  border-radius: 15px;\r\n  border: 1px solid rgb(80, 85, 103);\r\n  position: relative;\r\n  cursor: pointer;\r\n}\r\n\r\n.inputs {\r\n  width: 90%;\r\n  height: 50px;\r\n  float: bottom;\r\n  background-color: rgb(66, 70, 86);\r\n  border-radius: 15px;\r\n  border: 2px solid rgb(34, 135, 225);\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  transition: 0.2s;\r\n  font-size: 20px;\r\n  color: #fff;\r\n  font-weight: 100;\r\n}\r\n\r\n.carrd {\r\n  width: 80vw;\r\n  height: 80vh;\r\n  margin: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  padding-bottom: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n}\r\n.message-container {\r\n  height: 420px; /* 设置容器的高度，根据需要进行调整 */\r\n  overflow-y: auto; /* 添加垂直滚动条 */\r\n}\r\n.gg{\r\n  width:500px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}